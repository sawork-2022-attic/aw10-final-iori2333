openapi: 3.0.0
info:
  title: API
  version: 1.0.0
  description: API
  contact:
    name: Swagger API Team
paths:
  /order:
    get:
      summary: All orders
      operationId: getAllOrders
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    post:
      summary: Add a new order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      tags:
        - cart
  /order/{orderId}:
    get:
      summary: Get order information
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    put:
      summary: Update order status
      operationId: updateOrderStatusById
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: status
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    delete:
      summary: Remove order
      operationId: removeOrderById
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
components:
  schemas:
    Order:
      type: object
      required:
        - id
        - items
        - status
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        status:
          type: string
    Item:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
        quantity:
          type: number
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
